
package org.soap.client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2-hudson-752-
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UserSOAP", targetNamespace = "http://soap/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UserSOAP {


    /**
     * 
     * @param arg4
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "register", targetNamespace = "http://soap/", className = "org.soap.client.Register")
    @ResponseWrapper(localName = "registerResponse", targetNamespace = "http://soap/", className = "org.soap.client.RegisterResponse")
    @Action(input = "http://soap/UserSOAP/registerRequest", output = "http://soap/UserSOAP/registerResponse")
    public boolean register(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "connection", targetNamespace = "http://soap/", className = "org.soap.client.Connection")
    @ResponseWrapper(localName = "connectionResponse", targetNamespace = "http://soap/", className = "org.soap.client.ConnectionResponse")
    @Action(input = "http://soap/UserSOAP/connectionRequest", output = "http://soap/UserSOAP/connectionResponse")
    public boolean connection(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

}
